//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var Favourite = newFavouriteTable("", "FAVOURITE", "")

type favouriteTable struct {
	sqlite.Table

	// Columns
	ID    sqlite.ColumnInteger
	Name  sqlite.ColumnString
	Cmds  sqlite.ColumnString
	Wtcmd sqlite.ColumnString

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type FavouriteTable struct {
	favouriteTable

	EXCLUDED favouriteTable
}

// AS creates new FavouriteTable with assigned alias
func (a FavouriteTable) AS(alias string) *FavouriteTable {
	return newFavouriteTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new FavouriteTable with assigned schema name
func (a FavouriteTable) FromSchema(schemaName string) *FavouriteTable {
	return newFavouriteTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new FavouriteTable with assigned table prefix
func (a FavouriteTable) WithPrefix(prefix string) *FavouriteTable {
	return newFavouriteTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new FavouriteTable with assigned table suffix
func (a FavouriteTable) WithSuffix(suffix string) *FavouriteTable {
	return newFavouriteTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newFavouriteTable(schemaName, tableName, alias string) *FavouriteTable {
	return &FavouriteTable{
		favouriteTable: newFavouriteTableImpl(schemaName, tableName, alias),
		EXCLUDED:       newFavouriteTableImpl("", "excluded", ""),
	}
}

func newFavouriteTableImpl(schemaName, tableName, alias string) favouriteTable {
	var (
		IDColumn       = sqlite.IntegerColumn("ID")
		NameColumn     = sqlite.StringColumn("NAME")
		CmdsColumn     = sqlite.StringColumn("CMDS")
		WtcmdColumn    = sqlite.StringColumn("WTCMD")
		allColumns     = sqlite.ColumnList{IDColumn, NameColumn, CmdsColumn, WtcmdColumn}
		mutableColumns = sqlite.ColumnList{NameColumn, CmdsColumn, WtcmdColumn}
	)

	return favouriteTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:    IDColumn,
		Name:  NameColumn,
		Cmds:  CmdsColumn,
		Wtcmd: WtcmdColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
